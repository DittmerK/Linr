/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.dittmer.linr;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.ArrayList;

public class UtilTest {
    
    public UtilTest() {}
    
    @Test
    public void testScrubLeadingAndTrailingSpaces()
    {
        String s = "    s   ";
        assertEquals("s", Util.scrubLeadingAndTrailingSpace(s));
    }

    @Test 
    public void testEditDistance()
    {
        String foo = "foo";
        String foot = "foot";
        int editDistance = Util.editDistance(foot, foo);
        assertEquals(1, editDistance);
    }

    @Test
    public void testSimilarity()
    {
        String foo = "foo";
        String foot = "foot";
        double sim = Util.similarity(foot, foo);
        assertEquals(.75, sim, 0.001);
    }

    @Test
    public void testLoadSaveFile()
    {
        //Create testdata file
        BufferedWriter bw;
        //Create or find file
        File linrFile = new File(System.getProperty("user.home") + "/.linr");
        try {
            linrFile.mkdir();
        } catch (Exception e) {
            e.printStackTrace();
        }
        File lineNotesFile = new File(linrFile, "test.csv");
        try {
            bw = new BufferedWriter(new FileWriter(lineNotesFile));
            bw.write("Alexa;1;2;Called Line;Test Line;;1;FALSE");
            bw.newLine();
            bw.close();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
            assertFalse(true);//Fail out
        }

        LineNote expectedLN = new LineNote("Alexa", "1", 2, "Called Line", "Test Line", "", 1, true);
        App.lineNotes = new ArrayList<LineNote>();

        //Run code and test
        Util.loadSaveFile("test.csv");

        assertEquals(1, App.lineNotes.size());
        assertTrue(expectedLN.equals(App.lineNotes.get(0)));

        //Cleanup
        lineNotesFile.delete();
        
    }

    @Test
    public void testWriteSaveFileDoesntExist()
    {
        //Setup Testdata
        LineNote expectedLN = new LineNote("Alexa", "1", 2, "Called Line", "Test Line", " ", 1, true);
        App.lineNotes = new ArrayList<LineNote>();
        App.lineNotes.add(expectedLN);
        File linrFile = new File(System.getProperty("user.home") + "/.linr");
        File lineNotesFile = new File(linrFile, "test.csv");

        //Run code and test
        assertFalse(lineNotesFile.exists());
        Util.writeSaveFile("test.csv");
        assertTrue(linrFile.exists());
        assertTrue(lineNotesFile.exists());
        try(BufferedReader br = new BufferedReader(new FileReader(lineNotesFile)))
        {
            assertEquals("Alexa;1;2;Called Line;Test Line; ;1;TRUE", br.readLine());
        } catch (FileNotFoundException e) {} catch(IOException e) {}
        lineNotesFile.delete();
    }

    @Test
    public void testExportPDFS()
    {
        //Setup Testdata
        LineNote expectedLN = new LineNote("TESTTEST", "1", 2, "Called Line", "Test Line", " ", 1, false);
        App.lineNotes = new ArrayList<LineNote>();
        App.lineNotes.add(expectedLN);

        //Run code and test
        new SideMenuController().export();
        //Test for file
        File testFile = new File(System.getProperty("user.home") + "/TESTTESTLineNotes.pdf");
        assertTrue(testFile.exists());
        testFile.delete();
    }
}
